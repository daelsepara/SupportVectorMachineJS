class Matrix{static Create(t){var r=new Array(t||0),a=t;if(arguments.length>1)for(var i=Array.prototype.slice.call(arguments,1);a--;)r[t-1-a]=this.Create.apply(this,i);return r}static Clone(t){var r,a;if(Array.isArray(t)){for(a=t.slice(0),r=0;r<a.length;r++)a[r]=this.Clone(a[r]);return a}if("object"==typeof t)throw"Cannot clone array containing an object!";return t}static MemCopy(t,r,a,i,e){for(var h=0;h<e;h++)t[r+h]=a[i+h]}static Copy2D(t,r,a,i){if(i>=0&i<r.length)for(var e=0;e<t.length;e++)this.MemCopy(t[e],0,r[e],a,t[0].length)}static Copy2DOffset(t,r,a,i){if(i>=0&i<t.length&r.length>0)for(var e=0;e<r.length;e++)this.MemCopy(t[e],a,r[e],0,r[0].length)}static Transpose(t){var r=t.length,a=t[0].length;if(r>1&&a>1){for(var i=this.Create(a,r),e=0;e<r;e++)for(var h=0;h<a;h++)i[h][e]=t[e][h];return i}if(r>1&&1==a){for(i=this.Create(1,r),e=0;e<r;e++)i[e]=t[e][0];return[i]}if(a>1&&1==r){for(i=this.Create(a,1),h=0;h<a;h++)i[h][0]=t[0][h];return i}}static Multiply(t,r){var a=t[0].length,i=t.length,e=r[0].length;if(a==r.length){for(var h=this.Create(i,e),s=0;s<i;s++)for(var n=0;n<e;n++){h[s][n]=0;for(var l=0;l<a;l++)h[s][n]+=t[s][l]*r[l][n]}return h}}static Product(t,r){var a=t[0].length,i=t.length,e=r[0].length,h=r.length;if(a==e&&i==h){for(var s=this.Create(i,a),n=0;n<i;n++)for(var l=0;l<a;l++)s[n][l]=a>1?t[n][l]*r[n][l]:[t[n][l]*r[n][l]];return s}}static MultiplyVector(t,r){var a=t.length;if(a==r.length){for(var i=this.Create(a),e=0;e<a;e++)i[e]=t[e]*r[e];return i}}static MultiplyConstant(t,r=1){for(var a=t[0].length,i=t.length,e=this.Create(i,a),h=0;h<i;h++)for(var s=0;s<a;s++)e[h][s]=r*t[h][s];return e}static Add(t,r,a=1){var i=t[0].length,e=t.length,h=r[0].length,s=r.length;if(i==h&&e==s){for(var n=this.Create(e,i),l=0;l<e;l++)for(var o=0;o<i;o++)n[l][o]=t[l][o]+a*r[l][o];return n}}static AddConstant(t,r=0){for(var a=t[0].length,i=t.length,e=this.Create(i,a),h=0;h<i;h++)for(var s=0;s<a;s++)e[h][s]=t[h][s]+r;return e}static Sum(t){for(var r=0,a=0;a<Ay;a++)for(var i=0;i<Ax;i++)r+=t[a][i];return r}static SquareSum(t){for(var r=0,a=0;a<Ay;a++)for(var i=0;i<Ax;i++)r+=t[a][i]*t[a][i];return r}static Mean(t,r){if(1===r){for(var a=this.Create(t[0].length),i=0;i<t[0].length;i++){for(var e=0,h=0;h<t.length;h++)e+=t[h][i];a[i]=e/t.length}return a}for(a=this.Create(t.length),h=0;h<t.length;h++){for(e=0,i=0;i<t[0].length;i++)e+=t[h][i];a[h]=e/t[0].length}return a}static Sigmoid(t){return 1/(1+Math.exp(-t))}static Diff(t,r){var a=t[0].length,i=t.length,e=r[0].length,h=r.length;if(a==e&&i==h){for(var s=this.Create(i,a),n=0;n<i;n++)for(var l=0;l<a;l++)s[n][l]=t[n][l]-r[n][l];return s}}static Sigm(t){for(var r=t[0].length,a=t.length,i=this.Create(a,r),e=0;e<a;e++)for(var h=0;h<r;h++)i[e][h]=this.Sigmoid(t[e][h]);return i}static DSigm(t){for(var r=t[0].length,a=t.length,i=this.Create(a,r),e=0;e<a;e++)for(var h=0;h<r;h++){var s=this.Sigmoid(t[e][h]);i[e][h]=s*(1-s)}return i}static CBind(t,r){var a=t[0].length,i=t.length,e=r[0].length;if(i==r.length){var h=a+e,s=i,n=this.Create(s,h);return this.Copy2DOffset(n,t,0,0),this.Copy2DOffset(n,r,a,0),n}}static Flip(t,r){for(var a=t.length,i=t[0].length,e=t[0][0].length,h=this.Create(a,i,e),s=0;s<a;s++)for(var n=0;n<i;n++)for(var l=0;l<e;l++)switch(r){case 0:h[s][n][l]=t[s][n][e-l-1];break;case 1:h[s][n][l]=t[s][i-n-1][l];break;case 2:h[s][n][l]=t[a-s-1][n][l];break;default:h[s][n][l]=t[s][n][e-l-1]}return h}static Flip2D(t,r){for(var a=t.length,i=t[0].length,e=this.Create(a,i),h=0;h<a;h++)for(var s=0;s<i;s++)switch(r){case 0:e[h][s]=t[h][i-s-1];break;case 1:e[h][s]=t[a-h-1][s];break;default:e[h][s]=t[h][i-s-1]}return e}static FlipAll(t){for(var r=t.length,a=t[0].length,i=t[0][0].length,e=this.Create(r,a,i),h=this.Clone(t),s=0;s<3;s++)e=this.Flip(h,s),h=this.Clone(e);return e}static Rotate180(t){for(var r=this.Create(t.length,t[0].length),a=this.Clone(t),i=0;i<2;i++)r=this.Flip2D(a,i),a=this.Clone(r);return r}static Expand(t,r,a){for(var i=t[0].length*r,e=t.length*a,h=this.Create(e,i),s=0;s<t.length;s++)for(var n=0;n<t[0].length;n++)for(var l=0;l<a;l++)for(var o=0;o<r;o++)h[s*a+l][n*r+o]=t[s][n];return h}static Vector(t){for(var r=this.Transpose(t),a=this.Create(t.length*t[0].length),i=0,e=0;e<r.length;e++)for(t=0;t<r[0].length;t++)a[i]=r[e][t],i++;return a}static Column(t){for(var r=this.Create(t.length,1),a=0;a<t.length;a++)r[a][0]=t[a];return r}static RowSums(t){for(var r=this.Create(t.length,1),a=0;a<t.length;a++){r[a][0]=0;for(var i=0;i<t[0].length;i++)r[a][0]+=t[a][i]}return r}static ColSums(t){for(var r=this.Create(1,t[0].length),a=0;a<t[0].length;a++){r[0][a]=0;for(var i=0;i<t.length;i++)r[0][a]+=t[i][a]}return r}static Diag(t){if(t>0){for(var r=this.Create(t,t),a=0;a<t;a++)for(var i=0;i<t;i++)r[a][i]=i==a?1:0;return r}}static Sqrt(t){for(var r=t[0].length,a=t.length,i=this.Create(a,r),e=0;e<a;e++)for(var h=0;h<r;h++)i[e][h]=Math.sqrt(t[e][h]);return i}static Pow(t,r){for(var a=t[0].length,i=t.length,e=this.Create(i,a),h=0;h<i;h++)for(var s=0;s<a;s++)e[h][s]=Math.pow(t[h][s],r);return e}static Powers(t,r){for(var a=r[0].length,i=r.length,e=this.Create(i,a),h=0;h<i;h++)for(var s=0;s<a;s++)e[h][s]=Math.pow(t,r[h][s]);return e}static SetVector(t,r=0){for(var a=0;a<t.length;a++)t[a]=r}static Set(t,r=0){for(var a=t[0].length,i=t.length,e=0;e<i;e++)for(var h=0;h<a;h++)t[e][h]=r}static Normalize(t){for(var r=t[0].length,a=t.length,i=this.Create(a,r),e=this.Create(r),h=this.Create(r),s=0;s<r;s++)e[s]=Number.MIN_VALUE,h[s]=Number.MAX_VALUE;for(var n=0;n<a;n++)for(s=0;s<r;s++)e[s]=Math.max(t[n][s],e[s]),h[s]=Math.min(t[n][s],h[s]);for(n=0;n<a;n++)for(s=0;s<r;s++){var l=e[s]-h[s];i[n][s]=(t[n][s]-h[s])/l}return{result:i,min:h,max:e}}static ApplyNormalization(t,r,a){for(var i=t[0].length,e=t.length,h=this.Create(e,i),s=0;s<e;s++)for(var n=0;n<i;n++){var l=r[n]-a[n];h[s][n]=(t[s][n]-a[n])/l}return h}}class KernelType{static get POLYNOMIAL(){return 0}static get GAUSSIAN(){return 1}static get RADIAL(){return 2}static get SIGMOID(){return 3}static get LINEAR(){return 4}static get FOURIER(){return 5}static get UNKNOWN(){return-1}}class KernelFunction{static Rows(t){return t.length}static Cols(t){return t[0].length}static Vectorize(t,r){t=Matrix.Vector(t),r=Matrix.Vector(r)}static Multiply(t,r){this.Vectorize(t,r);var a=0;if(t.length==r.length)for(var i=0;i<t.length;i++)a+=t[i]*r[i];return a}static SquaredDiff(t,r){this.Vectorize(t,r);var a=0;if(t.length==r.length)for(var i=0;i<t.length;i++){var e=t[i]-r[i];a+=e*e}return a}static Linear(t,r,a){return this.Multiply(t,r)*(a.length>0?a[0]:1)+(a.length>1?a[1]:0)}static Polynomial(t,r,a){var i=a.length>0?a[0]:0,e=a.length>1?a[1]:1;return Math.pow(this.Multiply(t,r)+i,e)}static Gaussian(t,r,a){var i=this.SquaredDiff(t,r),e=a.length>0?a[0]:1,h=2*e*e;return Math.abs(h)>0?Math.exp(-i/h):0}static Radial(t,r,a){var i=a.length>0?a[0]:1,e=2*i*i;return Math.abs(e)>0?Math.exp(-Math.sqrt(this.SquaredDiff(t,r))/e):0}static Sigmoid(t,r,a){var i=a.length>0?a[0]:1,e=a.length>1?a[1]:0;return Math.tanh(i*this.Multiply(t,r)/t.length+e)}static Fourier(t,r,a){this.Vectorize(t,r);for(var i=Matrix.Create(t.length),e=0,h=a.length>0?a[0]:1,s=0;s<t.length;s++){i[s]=2*Math.sin(h+.5);var n=t[s]-r[s];i[s]=Math.abs(n)>0?Math.sin(h+.5)*n/Math.sin(.5*n):i[s],e=0==s?i[s]:e*i[s]}return e}static Run(t,r,a,i){var e=0;return t==KernelType.LINEAR?e=this.Linear(r,a,i):t==KernelType.GAUSSIAN?e=this.Gaussian(r,a,i):t==KernelType.FOURIER?e=this.Fourier(r,a,i):t==KernelType.SIGMOID?e=this.Sigmoid(r,a,i):t==KernelType.RADIAL?e=this.Radial(r,a,i):t==KernelType.POLYNOMIAL&&(e=this.Polynomial(r,a,i)),e}}class SupportVectorMachine{constructor(){this.ModelX=void 0,this.ModelY=[],this.Type=KernelType.UNKNOWN,this.KernelParam=void 0,this.Alpha=void 0,this.W=void 0,this.B=0,this.C=0,this.Tolerance=0,this.Category=0,this.Iterations=0,this.MaxIterations=0,this.Trained=!1,this.K=[],this.E=[],this.alpha=[],this.dx=[],this.dy=[],this.b=0,this.eta=0,this.H=0,this.L=0}Initialize(t,r,a,i,e,h,s,n,l,o){this.ModelX=t,this.ModelY=r,this.Type=a,this.KernelParam=i,this.Alpha=e,this.B=h,this.W=s,this.MaxIterations=n,this.Trained=!0,this.C=l,this.Category=o}Rows(t){return t.length}Cols(t){return t[0].length}Setup(t,r,a,i,e,h=.001,s=5,n=1){this.dx=Matrix.Clone(t),this.dy=Matrix.Clone(r),this.Type=i;var l=this.Rows(this.dx);if(this.Category=n,this.MaxIterations=s,this.Tolerance=h,this.C=a,this.KernelParam=e,this.alpha=Matrix.Create(l),Matrix.SetVector(this.alpha,0),this.E=Matrix.Create(l),Matrix.SetVector(this.E,0),this.b=0,this.Iterations=0,i==KernelType.LINEAR){var o=Matrix.Transpose(this.dx);this.K=Matrix.Multiply(this.dx,o);var M=this.KernelParam.length>0?this.KernelParam[0]:1,p=this.KernelParam.length>1?this.KernelParam[1]:0;this.K=Matrix.MultiplyConstant(this.K,M),this.K=Matrix.AddConstant(this.K,p)}else if(i==KernelType.GAUSSIAN||i==KernelType.RADIAL){var g=Matrix.Pow(this.dx,2),f=Matrix.RowSums(g),v=Matrix.Transpose(f),u=Matrix.Transpose(this.dx),x=Matrix.Multiply(this.dx,u),C=Matrix.Expand(f,l,1),d=Matrix.Expand(v,1,l);x=Matrix.MultiplyConstant(x,-2),C=Matrix.Add(C,d),C=Matrix.Add(C,x);var c=this.KernelParam.length>0?this.KernelParam[0]:1,y=Math.abs(c)>0?Math.exp(-1/(2*c*c)):0;this.Type==KernelType.RADIAL&&(C=Matrix.Sqrt(C)),this.K=Matrix.Powers(y,C)}else{this.K=Matrix.Create(l,l);for(var A=Matrix.Create(1,this.Cols(this.dx)),K=Matrix.Create(1,this.Cols(this.dx)),m=0;m<l;m++){Matrix.Copy2D(A,this.dx,0,m);for(var T=0;T<l;T++)Matrix.Copy2D(K,this.dx,0,T),this.K[m][T]=KernelFunction.Run(i,A,K,this.KernelParam),this.K[T][m]=this.K[m][T]}}this.eta=0,this.L=0,this.H=0;for(m=0;m<this.dy.length;m++)this.dy[m]=parseInt(this.dy[m])!=this.Category?-1:1}Step(){if(this.Iterations>=this.MaxIterations)return!0;for(var t=this.dy.length,r=0,a=0;a<t;a++){this.E[a]=this.b;for(var i=0;i<t;i++)this.E[a]+=this.alpha[i]*this.dy[i]*this.K[a][i];if(this.E[a]-=this.dy[a],this.dy[a]*this.E[a]<-this.Tolerance&&this.alpha[a]<this.C||this.dy[a]*this.E[a]>this.Tolerance&&this.alpha[a]>0){for(var e=a;e==a;)e=parseInt(Math.floor(t*Math.random()));this.E[e]=this.b;for(i=0;i<t;i++)this.E[e]+=this.alpha[i]*this.dy[i]*this.K[e][i];this.E[e]-=this.dy[e];var h=this.alpha[a],s=this.alpha[e];if(parseInt(this.dy[a])==parseInt(this.dy[e])?(this.L=Math.max(0,this.alpha[e]+this.alpha[a]-this.C),this.H=Math.min(this.C,this.alpha[e]+this.alpha[a])):(this.L=Math.max(0,this.alpha[e]-this.alpha[a]),this.H=Math.min(this.C,this.C+this.alpha[e]-this.alpha[a])),Math.abs(this.L-this.H)<=Number.EPSILON)continue;if(this.eta=2*this.K[a][e]-this.K[a][a]-this.K[e][e],this.eta>=0)continue;if(this.alpha[e]=this.alpha[e]-this.dy[e]*(this.E[a]-this.E[e])/this.eta,this.alpha[e]=Math.min(this.H,this.alpha[e]),this.alpha[e]=Math.max(this.L,this.alpha[e]),Math.abs(this.alpha[e]-s)<this.Tolerance){this.alpha[e]=s;continue}this.alpha[a]=this.alpha[a]+this.dy[a]*this.dy[e]*(s-this.alpha[e]);var n=this.b-this.E[a]-this.dy[a]*(this.alpha[a]-h)*this.K[a][e]-this.dy[e]*(this.alpha[e]-s)*this.K[a][e],l=this.b-this.E[e]-this.dy[a]*(this.alpha[a]-h)*this.K[a][e]-this.dy[e]*(this.alpha[e]-s)*this.K[e][e];0<this.alpha[a]&&this.alpha[a]<this.C?this.b=n:0<this.alpha[e]&&this.alpha[e]<this.C?this.b=l:this.b=(n+l)/2,r++}}return 0==r?this.Iterations++:this.Iterations=0,this.Iterations>=this.MaxIterations}Generate(){for(var t=this.Rows(this.dx),r=this.Cols(this.dx),a=0,i=0;i<t;i++)Math.abs(this.alpha[i])>0&&a++;this.ModelX=Matrix.Create(a,this.Cols(this.dx)),this.ModelY=Matrix.Create(a),this.Alpha=Matrix.Create(a);var e=0;for(i=0;i<t;i++)if(Math.abs(this.alpha[i])>0){for(var h=0;h<r;h++)this.ModelX[e][h]=this.dx[i][h];this.ModelY[e]=this.dy[i],this.Alpha[e]=this.alpha[i],e++}this.B=this.b;var s=[Matrix.MultiplyVector(this.alpha,this.dy)],n=Matrix.Multiply(s,this.dx);this.W=Matrix.Transpose(n),this.Trained=!0}Train(t,r,a,i,e,h=.001,s=5,n=1){for(this.Setup(t,r,a,i,e,h,s,n);!this.Step(););this.Generate()}Predict(t){var r=Matrix.Create(this.Rows(t),1);if(this.Trained){var a=Matrix.Clone(t);1==this.Cols(t)?a=Matrix.Transpose(t):Matrix.Copy2D(a,t,0,0);var i=this.Rows(a);if(r=Matrix.Create(i,1),Matrix.Set(r,0),this.Type==KernelType.LINEAR)r=Matrix.Multiply(a,this.W),r=Matrix.AddConstant(r,this.B);else if(this.Type==KernelType.GAUSSIAN||this.Type==KernelType.RADIAL){var e=Matrix.Pow(a,2),h=Matrix.Pow(this.ModelX,2),s=Matrix.RowSums(h),n=Matrix.RowSums(e),l=Matrix.Transpose(s),o=Matrix.Transpose(this.ModelX),M=Matrix.Transpose(Matrix.Column(this.ModelY)),p=Matrix.Transpose(Matrix.Column(this.Alpha)),g=this.Rows(n),f=this.Cols(l),v=Matrix.Multiply(a,o);v=Matrix.MultiplyConstant(v,-2);var u=Matrix.Expand(n,f,1),x=Matrix.Expand(l,1,g);u=Matrix.Add(u,x),u=Matrix.Add(u,v);var C=this.KernelParam.length>0?this.KernelParam[0]:1;this.Type==KernelType.RADIAL&&(u=Matrix.Sqrt(u));var d=Math.abs(C)>0?Math.exp(-1/(2*C*C)):0,c=Matrix.Powers(d,u),y=Matrix.Expand(M,1,g),A=Matrix.Expand(p,1,g);c=Matrix.Product(c,y),c=Matrix.Product(c,A);var K=Matrix.RowSums(c);Matrix.Copy2D(r,K,0,0),r=Matrix.AddConstant(r,this.B)}else for(var m=Matrix.Create(this.Cols(a)),T=Matrix.Create(this.Cols(ModelX)),S=0;S<i;S++){var I=0;Matrix.Copy2D(m,a,0,S);for(var R=0;R<this.Rows(ModelX);R++)Matrix.Copy2D(T,ModelX,0,R),I+=this.Alpha[R]*this.ModelY[R]*KernelFunction.Run(this.Type,m,T,this.KernelParam);r[S][0]+=I+this.B}}return r}Classify(t,r=0){for(var a=Matrix.Create(this.Rows(t),1),i=this.Predict(t),e=0;e<i.length;e++)a[e][0]=i[e][0]>r?this.Category:0;return a}}